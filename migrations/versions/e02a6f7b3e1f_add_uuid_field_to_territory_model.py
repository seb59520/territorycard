"""Add uuid field to Territory model

Revision ID: e02a6f7b3e1f
Revises: 158631f0e7a5
Create Date: 2024-12-08 14:59:24.479692

"""
from alembic import op
import sqlalchemy as sa
import uuid
from sqlalchemy.sql import table, column


# revision identifiers, used by Alembic.
revision = 'e02a6f7b3e1f'
down_revision = '158631f0e7a5'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # First, add the column as nullable
    with op.batch_alter_table('territory', schema=None) as batch_op:
        batch_op.add_column(sa.Column('uuid', sa.String(length=36), nullable=True))
    
    # Create a temp table object
    territory_table = table('territory',
        column('id', sa.Integer),
        column('uuid', sa.String(36))
    )
    
    # Update existing records with UUIDs
    connection = op.get_bind()
    results = connection.execute(sa.text('SELECT id FROM territory')).fetchall()
    
    for row in results:
        connection.execute(
            territory_table.update().
            where(territory_table.c.id == row[0]).
            values(uuid=str(uuid.uuid4()))
        )
    
    # Now add the NOT NULL constraint and unique constraint
    with op.batch_alter_table('territory', schema=None) as batch_op:
        batch_op.alter_column('uuid',
                    existing_type=sa.String(length=36),
                    nullable=False)
        batch_op.create_unique_constraint(None, ['uuid'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('territory', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_column('uuid')

    # ### end Alembic commands ###
